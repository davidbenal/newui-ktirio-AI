rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }

    function isUnder10MB() {
      return request.resource.size < 10 * 1024 * 1024;
    }

    // Projects images
    match /projects/{userId}/{imageId} {
      allow read: if true; // Public read
      allow write: if isAuthenticated() &&
                      isOwner(userId) &&
                      isImage() &&
                      isUnder10MB();
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // Generated versions
    match /versions/{userId}/{imageId} {
      allow read: if true; // Public read
      allow write: if isAuthenticated() &&
                      isOwner(userId) &&
                      isImage() &&
                      isUnder10MB();
      allow delete: if isAuthenticated() && isOwner(userId);
    }

    // User avatars
    match /avatars/{userId}/{imageId} {
      allow read: if true; // Public read
      allow write: if isAuthenticated() &&
                      isOwner(userId) &&
                      isImage() &&
                      isUnder10MB();
      allow delete: if isAuthenticated() && isOwner(userId);
    }
  }
}
